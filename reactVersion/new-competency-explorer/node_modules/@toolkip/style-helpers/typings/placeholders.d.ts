import { IFlatStyles, SplitStyles, PlaceholderIndex, IPlaceholder } from "./_interfaces";
import { IDictionary } from '@toolkip/object-helpers';
declare class _StylePlaceholders {
    splitOutPlaceholders(flattenedStyles: IFlatStyles): SplitStyles;
    findContainedPlaceholder(value: string): IPlaceholder;
    private _containsPlaceholder;
    indexStyleDictByPlaceholder(styleDict: IDictionary<IFlatStyles>): PlaceholderIndex;
    mapIndexToStyle(index: IDictionary<IDictionary<boolean>>, styles: IFlatStyles): IFlatStyles;
    replacePlaceholders(styles: IFlatStyles, placeholder: string, replaceWith: any): IFlatStyles;
}
export declare const StylePlaceholders: _StylePlaceholders;
export declare function findContainedPlaceholder(value: string): IPlaceholder;
export declare function splitStyles(flattenedStyles: IFlatStyles): SplitStyles;
export declare function indexByPlaceholder(styleDict: IDictionary<IFlatStyles>): Record<string | number, Record<string | number, Record<string | number, Record<string | number, boolean>>>>;
export declare function replacePlaceholders(styles: IFlatStyles, placeholder: string, replaceWith: any): IFlatStyles;
export declare function mapIndexToStyle(index: IDictionary<IDictionary<boolean>>, styles: IFlatStyles): IFlatStyles;
export {};
