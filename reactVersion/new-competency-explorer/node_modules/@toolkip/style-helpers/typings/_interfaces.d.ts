import { IDictionary } from '@toolkip/object-helpers';
export interface IStandardStyles {
    [selector: string]: TypedClassDefinition;
}
export interface IFlatStyles {
    [selector: string]: FlatClassDefinition;
}
export interface IPlaceholderMatchFunction {
    (valuePiece: string): number | string;
}
export interface TypedClassDefinition extends FlatClassDefinition {
    nested?: IStandardStyles;
}
export interface FlatClassDefinition extends Partial<CSSStyleDeclaration> {
    appearance?: string;
    webkitAppearance?: string;
    mozAppearance?: string;
    mozUserSelect?: string;
    khtmlUserSelect?: string;
    oUserSelect?: string;
    objectFit?: string;
    src?: string;
    from?: TypedClassDefinition;
    to?: TypedClassDefinition;
}
export interface IThemeColors {
    [id: string]: string;
}
export interface IFontFaceDefinition {
    url: string;
    format: string;
}
export interface ICustomFonts {
    [fontName: string]: IFontFaceDefinition[];
}
export interface IMediaQueries {
    [screenSize: string]: IStandardStyles;
}
export interface ITransitionStyle extends TypedClassDefinition {
    shouldRemove?: boolean;
}
export interface ITransitionDetails {
    elem: HTMLElement;
    start: ITransitionStyle;
    end: ITransitionStyle;
    time: number;
    delay: number;
}
export declare type Styles = IStandardStyles | ICustomFonts;
export declare type FlatStyles = IFlatStyles | ICustomFonts;
export interface ICombineOptions {
    styles: Styles[];
    placeholderToReplace?: string;
}
export interface SplitStyles {
    standard: IFlatStyles;
    withPlaceholders: IFlatStyles;
}
export interface IPlaceholder {
    name: string;
    defaultValue?: string;
}
export declare type PlaceholderIndex = IDictionary<IDictionary<IDictionary<IDictionary<boolean>>>>;
