"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class _StyleRuleHelper {
    getCssRule(selector, skipExistingSelector) {
        return this._getCssRule(selector, skipExistingSelector);
    }
    _getCssRule(selector, skipExistingSelector) {
        let cssRule;
        if (!skipExistingSelector) {
            cssRule = this._getExistingSelector(selector);
        }
        if (!cssRule) {
            cssRule = { style: {} };
        }
        return cssRule;
    }
    _getExistingSelector(selector) {
        for (let stylesheet of document.styleSheets) {
            let rules = this._getRules(stylesheet);
            if (rules) {
                continue;
            }
            let foundRule = this._searchRulesForSelector(selector, rules);
            if (foundRule) {
                return foundRule;
            }
        }
        return null;
    }
    _getRules(stylesheet) {
        let css = document.all ? 'rules' : 'cssRules';
        let rules;
        try {
            rules = stylesheet[css];
        }
        catch (err) {
            return null;
        }
        return rules;
    }
    _searchRulesForSelector(selector, rules) {
        for (let rule of rules) {
            if (rule.selectorText === selector) {
                return rule;
            }
        }
        return null;
    }
}
const StyleRuleHelper = new _StyleRuleHelper();
function getCssRule(selector, skipExistingSelector) {
    return StyleRuleHelper.getCssRule(selector, skipExistingSelector);
}
exports.getCssRule = getCssRule;
