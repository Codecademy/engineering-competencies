"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const object_helpers_1 = require("@toolkip/object-helpers");
class _StyleCombiner {
    combine(...styles) {
        return this._combineStyles(...styles);
    }
    _combineStyles(...styles) {
        let outStyles = {};
        for (let style of styles) {
            if (!style) {
                continue;
            }
            object_helpers_1.map(style, (curCls, selector) => {
                if (curCls instanceof Array) {
                    outStyles[selector] = this._combineFontStyle(outStyles[selector] || [], curCls);
                }
                else {
                    outStyles[selector] = this._combineStandardStyle(outStyles[selector] || {}, curCls);
                }
            });
        }
        ;
        return outStyles;
    }
    _combineStandardStyle(existingStyles, curCls) {
        let mergedDef = this._combineStyle(existingStyles, curCls);
        if (!mergedDef) {
            return;
        }
        return mergedDef;
    }
    _combineFontStyle(existingFonts, curFonts) {
        return existingFonts.concat(curFonts);
    }
    _combineStyle(startingStyles, curCls) {
        let mergedDef = this._mergeClassDefinition(startingStyles, curCls);
        if (object_helpers_1.isEmptyObject(mergedDef)) {
            return null;
        }
        return mergedDef;
    }
    _mergeClassDefinition(...definitions) {
        let mergedDef = {};
        for (let def of definitions) {
            object_helpers_1.map(def, (val, property) => {
                mergedDef[property] = val;
            });
        }
        return mergedDef;
    }
}
const StyleCombiner = new _StyleCombiner();
function combineStyles(...styles) {
    return StyleCombiner.combine(...styles);
}
exports.combineStyles = combineStyles;
