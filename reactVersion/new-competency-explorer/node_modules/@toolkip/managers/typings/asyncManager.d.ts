import { IIdentifiable, Identifier } from '@toolkip/identifiable';
import { DataManager } from "./dataManager";
import { Loadable, Creatable, ILoadFunction, ICreateFunction } from "./_interfaces";
import { IDictionary } from '@toolkip/object-helpers';
export declare class AsyncManager<I extends IIdentifiable> extends DataManager<I> implements Loadable<I>, Creatable<I> {
    protected _inFlight: IDictionary<Promise<I>>;
    protected _innerLoad: ILoadFunction<I>;
    protected _innerCreate: ICreateFunction<I>;
    constructor(load: ILoadFunction<I>, create?: ICreateFunction<I>);
    protected _createAndAddDefault(d: Partial<I>): this;
    getOrCreate(id: Identifier): Promise<I>;
    protected _loadAndCreate(id: Identifier): Promise<I>;
    create(d: Partial<I>): I;
    load(id: Identifier): Promise<I>;
}
