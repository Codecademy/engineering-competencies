"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const object_helpers_1 = require("@toolkip/object-helpers");
class DataManager {
    constructor() {
        this._data = {};
        this._populateWithDefaultData();
    }
    _populateWithDefaultData() { }
    _createAndAddDefault(data) {
        this.add(data);
    }
    add(datum) {
        if (this.contains(datum.id)) {
            return false;
        }
        this._data[datum.id] = datum;
        return true;
    }
    remove(id) {
        if (!this.contains(id)) {
            return null;
        }
        let out = this.get(id);
        delete this._data[id];
        return out;
    }
    contains(id) {
        return !!this._data[id];
    }
    clear() {
        this._data = {};
    }
    get(id) {
        if (!this.contains(id)) {
            return null;
        }
        return this._data[id];
    }
    map(mapFunc) {
        object_helpers_1.map(this._data, mapFunc);
    }
    toArray() {
        let out = [];
        this.map((elem) => {
            out.push(elem);
        });
        return out;
    }
    toDictionary() {
        let out = {};
        this.map((elem, id) => {
            out[id] = elem;
        });
        return out;
    }
    clone() {
        const out = new DataManager();
        const dataAsArray = this.toArray();
        for (let datum of dataAsArray) {
            out.add(datum);
        }
        return out;
    }
}
exports.DataManager = DataManager;
