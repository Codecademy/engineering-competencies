import { Primitive, IUpdatable, StandardElement, IDrawable, DrawableElement, FalsyTypes } from "./_interfaces";
export declare function isUndefined(value: any): value is undefined;
export declare function isNullOrUndefined(value: any): value is undefined | null;
export declare function isFalsy(value: any, falsyTypesToIgnore?: FalsyTypes[]): boolean;
export declare function isTruthy(value: any, falsyTypesToTreatAsTruthy?: FalsyTypes[]): boolean;
export declare function isInterface<T extends Object>(test: any, full_imp: T): test is T;
export declare function isString(test: any): test is string;
export declare function isKeyof<T>(test: any, reference?: T): test is keyof T;
export declare function isNumber(test: any): test is number;
export declare function isBoolean(test: any): test is boolean;
export declare function isPrimitive(test: any): test is Primitive;
export declare function isFunction(test: any): test is Function;
export declare function isArray<T>(test: any): test is Array<T>;
export declare function isObject(test: any): test is Object;
export declare function isDate(test: any): test is Date;
export declare function isPromise<T>(test: any): test is Promise<T>;
export declare function isPromiseLike<T>(test: any): test is PromiseLike<T>;
export declare function isStandardElement(test: any): test is StandardElement;
export declare function isDrawable(test: any): test is IDrawable;
export declare function isDrawableElement(test: any): test is DrawableElement;
export declare function isUpdatable(test: any): test is IUpdatable;
