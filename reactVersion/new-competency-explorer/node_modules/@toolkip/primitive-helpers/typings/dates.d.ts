export declare function dateDiff(a: Date, b: Date, signed?: boolean, includeTime?: boolean, returnMilli?: boolean): number;
export declare enum InclusivityEnum {
    EXCLUSIVE = -1,
    DEFAULT = 0,
    INCLUSIVE = 1
}
export declare function monthDiff(a: Date, b: Date, signed?: boolean, inclusivity?: InclusivityEnum): number;
export declare function getToday(include_time?: boolean): Date;
export declare function clearTimeInfo(date: Date, clearTZ?: boolean): Date;
export declare function businessDateDiff(a: Date, b: Date, signed?: boolean, includeTime?: boolean, returnMilli?: boolean): number;
export declare function shortDate(dt: Date): string;
export declare function inputDateFmt(dt: Date): string;
export declare function inputToDate(iDt?: string, iTime?: string): Date;
export declare function shortTime(dt: Date, withExtra?: boolean): string;
export declare function inputTimeFmt(time: Date, includeSeconds?: boolean): string;
export declare function shortDateTime(dt: Date, with_extra?: boolean): string;
export declare function stopwatchDisplay(milli: number, noLeadingZeros: any, noBlanks: any): string;
export interface IStopwatchOptions {
    showMilli?: boolean;
}
export declare function updatedStopwatchDisplay(milli: number, options: IStopwatchOptions): string;
export declare function addToDate(date: Date, counts: IDateDifferences): Date;
export declare function getMonthName(date: Date, short?: boolean): string;
export declare function getDayOfWeek(date: Date, short?: boolean): string;
export declare function getLengthOfMonthInDays(date: Date): number;
export declare function isLeapYear(date: Date): boolean;
export declare function getShortYear(date: Date): number;
export declare function isWeekend(date: Date): boolean;
export declare function isToday(date: Date): boolean;
export declare function isSameDate(dateA: Date, dateB: Date): boolean;
export declare function getDisplayDuration(counts: IDateDifferences): string;
export interface IDateDifferences {
    years?: number;
    months?: number;
    days?: number;
    hours?: number;
    minutes?: number;
    seconds?: number;
    milliseconds?: number;
}
