"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _model_1 = require("../abstractClasses/_model");
const core_1 = require("../_typeguards/core");
const shared_types_1 = require("@toolkip/shared-types");
const identifiable_1 = require("@toolkip/identifiable");
const primitiveModels_1 = require("../primitiveModels");
const objectModels_1 = require("../objectModels");
const arrayModels_1 = require("../arrayModels");
exports.createModel = (data, transforms) => {
    if (core_1.isModel(data)) {
        return data.clone(transforms);
    }
    else {
        return _createModelForData(data, transforms);
    }
};
const _createModelForData = (data, transforms) => {
    if (shared_types_1.isPrimitive(data)) {
        return new primitiveModels_1.MPrimitive(data, transforms);
    }
    if (shared_types_1.isDate(data)) {
        return new primitiveModels_1.MDate(data, transforms);
    }
    if (identifiable_1.isIdentifiable(data)) {
        return new objectModels_1.MIdentifiable(data, transforms);
    }
    if (shared_types_1.isArray(data)) {
        return _createArrayModelForData(data, transforms);
    }
    if (shared_types_1.isObject(data)) {
        return new objectModels_1.MObject(data, transforms);
    }
};
const _createArrayModelForData = (data, transforms) => {
    if (data[0] && identifiable_1.isIdentifiable(data[0])) {
        return new arrayModels_1.MManager(data, transforms);
    }
    else {
        return new arrayModels_1.MArray(data, transforms);
    }
};
exports.setupModelWrapping = () => {
    _model_1._Model.createModel = exports.createModel;
};
exports.setupModelWrapping();
