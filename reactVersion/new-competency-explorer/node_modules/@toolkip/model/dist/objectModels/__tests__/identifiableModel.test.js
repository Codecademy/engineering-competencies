"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const identifiableModel_1 = require("../identifiableModel");
const modelFactory_1 = require("../../helpers/modelFactory");
modelFactory_1.setupModelWrapping();
describe('IdentifiableModel', () => {
    it('assigns a new ID with an empty starter', () => {
        const model = new identifiableModel_1.MIdentifiable();
        expect(model.get('id')).toBeTruthy();
    });
    it('assigns a new ID when all but an id is passed', () => {
        const model = new identifiableModel_1.MIdentifiable({ name: 'Big Bird' });
        expect(model.id).toBeTruthy();
    });
    it('does not assign an id if it is provided', () => {
        const model = new identifiableModel_1.MIdentifiable({ id: '11', name: 'Big Bird' });
        expect(model.id).toEqual('11');
    });
    it('assigns ids based on last ID', () => {
        const modelA = new identifiableModel_1.MIdentifiable({ id: '20' });
        const modelB = new identifiableModel_1.MIdentifiable();
        expect(modelA.id).toEqual('20');
        expect(modelB.id).toEqual('21');
    });
    it('assigns a suffix if requested', () => {
        const modelA = new identifiableModel_1.MIdentifiable({ id: '20-model' }, null, 'model');
        const modelB = new identifiableModel_1.MIdentifiable(null, null, 'model');
        expect(modelA.id).toEqual('20-model');
        expect(modelB.id).toEqual('21-model');
    });
});
