import { MIdentifiable } from '../objectModels/identifiableModel';
import { MObject } from '../objectModels';
import { MPrimitive, MDate } from '../primitiveModels';
import { MArray, MManager } from '../arrayModels';
import { IIdentifiable } from '@toolkip/identifiable';
import { ISelector } from '../_shared/_interfaces';
export declare const isPrimitiveModel: <T extends string | number | boolean = string | number | boolean>(test: any) => test is MPrimitive<T>;
export declare const isDateModel: (test: any) => test is MDate;
export declare const isObjectModel: <T>(test: any) => test is MObject<T, keyof T>;
export declare const isArrayModel: <T>(test: any) => test is MArray<T>;
export declare const isManagerModel: <T extends IIdentifiable>(test: any) => test is MManager<T>;
export declare const isIdentifiableModel: (model: any) => model is MIdentifiable<any>;
export declare const isSelector: (test: any) => test is ISelector<any, any, any, any>;
