"use strict";
/**
 * This file has functions that typeguard the given node/type.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var utils = require("tsutils/typeguard/2.8");
function isAccessExpression(node) {
    return (utils.isElementAccessExpression(node) ||
        utils.isPropertyAccessExpression(node));
}
exports.isAccessExpression = isAccessExpression;
function isFunctionLikeDeclaration(node) {
    return (utils.isArrowFunction(node) ||
        utils.isConstructorDeclaration(node) ||
        utils.isFunctionDeclaration(node) ||
        utils.isFunctionExpression(node) ||
        utils.isGetAccessorDeclaration(node) ||
        utils.isMethodDeclaration(node) ||
        utils.isSetAccessorDeclaration(node));
}
exports.isFunctionLikeDeclaration = isFunctionLikeDeclaration;
function isVariableLikeDeclaration(node) {
    return (utils.isBindingElement(node) ||
        utils.isEnumMember(node) ||
        utils.isParameterDeclaration(node) ||
        utils.isPropertyAssignment(node) ||
        utils.isPropertyDeclaration(node) ||
        utils.isPropertySignature(node) ||
        utils.isShorthandPropertyAssignment(node) ||
        utils.isVariableDeclaration(node));
}
exports.isVariableLikeDeclaration = isVariableLikeDeclaration;
function isVariableOrParameterOrPropertyDeclaration(node) {
    return (utils.isVariableDeclaration(node) ||
        utils.isParameterDeclaration(node) ||
        utils.isPropertyDeclaration(node));
}
exports.isVariableOrParameterOrPropertyDeclaration = isVariableOrParameterOrPropertyDeclaration;
function hasExpression(node) {
    return Object.prototype.hasOwnProperty.call(node, "expression");
}
exports.hasExpression = hasExpression;
//# sourceMappingURL=typeguard.js.map