"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils = require("tsutils/typeguard/2.8");
var check_node_1 = require("./shared/check-node");
// tslint:disable-next-line:variable-name
exports.Rule = check_node_1.createCheckNodeRule(checkNode, "Unexpected loop, use map or reduce instead.");
function checkNode(node, _ctx) {
    return node &&
        (utils.isForStatement(node) ||
            utils.isForInStatement(node) ||
            utils.isForOfStatement(node) ||
            utils.isWhileStatement(node) ||
            utils.isDoStatement(node))
        ? { invalidNodes: [check_node_1.createInvalidNode(node, [])] }
        : { invalidNodes: [] };
}
//# sourceMappingURL=noLoopStatementRule.js.map